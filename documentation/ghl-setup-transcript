00:01 Hi there, my name is Arthur, I will be walking you through our or 2.0 flow. At any point if you have any questions or any doubts please refer to our documentation here at high level dot stop at.io.
00:14 This link will be mentioned to you wherever you find this video. Yeah, so let's start with it. So first things first we need to go to marketplace sign up for developer account go to my apps and click on create app.
00:24 Stand up stuff we will go to my place. I'll just sign in again just to show you. Here I'll have to go to my app.
00:32 So I'll just do this demo application through because we already have to come up one over here. Now app type 10 private or public what private means is that your application will not be visible on the marketplace.
00:44 If it is public it will be. Now distribution type is at an agency level application or a sub account level.
00:50 So what this means is we have a few public API is which are available for agency accounts only as well as our other API's which are available on sub accounts as well.
00:58 So you have to choose very carefully you cannot change this later on. I choose both. All right now we have to click on the app see the settings.
01:10 This is our step one step two add up to your desired location. So now first things first we need to select the scope.
01:18 Let's say I need calendars dot read I need campaign.read only. I need let's say contact dot read only. Yeah for now I guess these are these permissions will work.
01:32 Now I need a redirect to our so what do you mean by redirect to our whenever you initiate an authentication procedure with high level.
01:40 I'll call as per the old 2.0 protocol. You have to specify a location where the identity provider in this case go high level will share the authorization code to what this is.
01:52 This means is we will be redirecting you to this very specific URL with a code in the URL which will have to use to get the access token under refresh tokens.
02:02 If that sounds confusing I have actually prepared a demo for everything. I will be sharing the demo code as well on over on GitHub as a public repository.
02:09 So yeah please feel free to refer to that as well. Yeah so for now I'll add a sleepy local host.
02:16 This local host is probably probably hosted on my own laptop slash over slash call back. Please keep this URL in mind you will get to know the significance of it once we start with the demo.
02:31 Now we need to generate a client key so what these are the actual credentials which will be using to do all the authentication and authorization.
02:42 Let's say this is called as demo key one. It is simple name it does not have any significance over here.
02:48 Now I'll be copying this client ID and this is my demo application. I will be based in the config file.
02:59 Here you go. Now I will be the grand key we have this file created. I'll just start a web book URL let's say.
03:14 Okay. Let's say it's G TBS go high level dot com slash a stout cool. So okay we have to add this as well.
03:30 Now we can see our save button has been enabled. I'll yeah. Let's just call this example as well. This can be anything once we have saved it we'll get a confirmation message.
03:42 All right now we need to make use of these things when we make our request. So I'll go to my demo project here you can see I have three files will go to initiate.js right.
03:56 Here you can see I have a few things request type is code redirect you are here is the you direct you are which I mentioned in the application as well.
04:03 Client ID is coming from here. This is the client ID which I just based it from a config. And client secret same thing.
04:15 So I'll just mention the scopes in it as well. Talent does not hit only. Then we have campaign story only.
04:35 And then we have contacts or three don't leave. These three things. So here you can see it actually makes a URL in code.
04:49 Now what is this URL if you go here. You can see that this is step three get the apps authorization page URL we have this marketplace or go high levels slash choose location URL.
04:58 Well, and we are passing a response type as code redirect you are right. This is the same redirect you are a which we mentioned in our setup.
05:05 Then client ID which we got while making a new client ID and the scopes which we have set up here.
05:12 Pretty straightforward I believe. And then yeah we actually just need to read direct to this page. So what I have done over here is this will just make that URL for me based on these parameters and read direct to me.
05:25 How this works is well it's not exactly part of the scope of this video but yeah you have the code available in on GitHub as a public repository please use that if you feel the requirement for it.
05:38 So yeah this is there I will start the server. Here we will go to local host 3000 and each year.
05:52 Now it actually directed me to high levels choose location page where in we are actually able to choose either the agency account or the server content.
06:01 Now if you remember carefully when we were making our application we had the option to choose either an agency or a server account I choose both so I get both options available over here.
06:10 I select this. Now you can see this is the location the callback URL have you can see there is a code in our address bar this code is actually used to generate this access token.
06:28 This is a very short procedure for it I'll explain it how it's happening. So yeah we'll go to this get access token page.
06:36 Now you can see we have this URL HTTPS lead connector HQ or token. Here there's a request where we need to pass the client ID which we already have the client secret which we got.
06:47 Now client grant type grant type in this case will be authorization code. See this code which we received in the URL right this is called as an authorization code in your old 2.0 terminology.
07:00 What this code means is this is just an intermediary code for your client to actually get these access tokens. Now this string this actual string which I'm highlighting right now this is the one which we'll use to query our APIs or whatever.
07:17 So yeah client ID client secret grant type and this code value is coming from here. Then there is the user type now user type will have company or location.
07:29 So if you have an API which requires a company level access token you'll have to use a type as company.
07:36 Otherwise you'll have to sell it select location. Do you direct your the same thing this this URI in my case in my case that is the key highlighting point over here.
07:46 And yeah so you will get a type multiple type of responses in 400 you'll get it's a bad request and you'll get the message saying what is actually bad in that request.
07:56 For 0 1 just means that your client the credentials which you have used is pretty much wrong or there is some error with that.
08:03 For 22 means there is some processing error. 200 means everything works fine and you'll get these in your response. Okay so if you want to hit these API manually let's say I'll just copy here there is this program called post mine it's a very great program to use for testing and all now client body 
08:25 here. I'll go from here I'll select client ID. Then I'll select client secret. Grant type is authorization code so well we already use that code once so I'll just do something I'll return.
08:50 Rest.json data I recruit or query now what this will do is will give me the query as it is in the URL it will not process it for them.
09:01 So I will won't be needing this part over here user type I'll select location for now redirect URL as it is.
09:09 So I'll need this code over here so I'll just restart my server. Now I'll go back and do this. It will select something let's have on this.
09:28 I got this code this is our authorization code and we'll paste it over here around when we send it. We got our access tokens so yes so this also defines that all right this token is valid for calendars read only access campaigns read only access as well as contacts read only access if you use it for
09:45 any other purpose or for any user type as well you will get an error. So please bear in mind you need to be very specific regarding that token what you need that token to get access to and what you need that open to do that's the very basis of what 2.0 protocols.
10:01 Yeah and location ID is basically the idea of the location where the sub account has been I also read this access token has been authorized okay I need a contacts API.
10:12 Contacts let's say get contact. I get contacts here this one. All right I'll copy this. Then I'll go to postman I'll go here.
10:32 Location ID is this errors authorization let's paste this token over here. Let's send. This token does not have access to this location so all right let's copy the location ID from here.
10:57 We'll go to parents we'll raise this location ID over here we'll send and here we can see a contact. That's how it's that's how it works so this is our basis of our authentication program authentication systems.
11:12 There is one more part to it which is using the refresh token as in this token to generate a new access token.
11:18 So you don't want your user to like go through this process again and again to get a new access token right.
11:24 So that is why we have a concept in order to point zero called refreshing access tokens. We get this refresh token as well as our access token.
11:34 So what is the difference between these two access token is for actual access of your resources the application resources and APIs refresh token is just used to generate a new access token nothing more nothing less.
11:48 So if we go over here refresh token I already have another API in that as in I have another part in my code which says local sleep on the as refresh I'll paste this and I got a new access token over here.
12:05 Simple as that now the request for this is actually pretty straightforward as well we'll go to get access token and here we will select refresh token.
12:15 Now you can see in this request we have a data refresh token I'll copy this as well. I'll go to postman I'll close this one here I'll paste now client ID client secret as usual client ID client secret.
12:42 This time I won't be needing a code value this time I won't be needing a new directory where I either location type I'll say type location.
12:53 And refresh token is this. So here I'll go I'll paste when I send it. We have a new access token ready for us also there is a fundamental difference between these tokens access token is valid for a day, whereas refresh token is valid for a little bit longer as always if you have any questions or anything
13:33 please refer to the documentation over here. Get access tokens and really that's all I thought.